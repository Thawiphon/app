// ------------------------------------------------------------------------
// ========================================================================
// THIS CODE AND INFORMATION ARE GENERATED BY AUTOMATIC CODE GENERATOR
// ========================================================================
// Template:   DataSource.tt
using System;
using System.CodeDom.Compiler;
using System.Collections.ObjectModel;
using System.Globalization;
using System.Linq;
using System.Runtime.CompilerServices;
using Entities=WPAppStudio.Entities;
using RepositoriesBase=WPAppStudio.Repositories.Base;
using WPAppStudio.Shared;

namespace WPAppStudio.Repositories
{
    /// <summary>
    /// beverages_beveragesCollection data source.
    /// </summary>
    [CompilerGenerated]
    [GeneratedCode("Radarc", "4.0")]
    public class beverages_beveragesCollection : Ibeverages_beveragesCollection 
    {
		private const int MaxResults = 10;
        private readonly ObservableCollection<Entities.beveragesSchema> _data = new ObservableCollection<Entities.beveragesSchema>
		{
          new Entities.beveragesSchema
            {
                Id= new Guid("eac545ac-6a04-4177-961c-0c6af094bb09"),
                Title=@" Brunei                    ",
                Subtitle=@"แตออก",
                Image=@"\Images\Item-81850fef-d52c-448e-afde-57de1e1e63bb.jpg",
                Description=@"เป็นเครื่องดื่มที่ขึ้นชื่อของประเทศ Brunei              ",
			},
          new Entities.beveragesSchema
            {
                Id= new Guid("449215b2-5b14-44be-a1cd-cefedbacf313"),
                Title=@"Cambodia                  ",
                Subtitle=@" โอเลี้ยง/ice black coffee",
                Image=@"\Images\Item-e28f3e5a-3ba9-41ad-b8ca-c1af220a7d47.jpg",
                Description=@"เป็นเครื่องดื่มที่ขึ้นชื่อของประเทศ Cambodia      ",
			},
          new Entities.beveragesSchema
            {
                Id= new Guid("ded26c11-b8cf-46b5-baad-dd4e2ff9f5c4"),
                Title=@"Indonesia                 ",
                Subtitle=@"น้ำส้มคั้น/orange juice",
                Image=@"\Images\Item-3f92cbf7-a0f2-40ba-af2c-b772dca6e3c6.jpg",
                Description=@"เป็นเครื่องดื่มที่ขึ้นชื่อของประเทศ    Indonesia                   ",
			},
          new Entities.beveragesSchema
            {
                Id= new Guid("0c6ea7e3-a5f3-4910-bc7e-df2890a16b14"),
                Title=@"Laos                            ",
                Subtitle=@" น้ำย่านาง/yanang juice",
                Image=@"\Images\Item-e4892f80-32a2-4654-9c6e-d7d399aebc19.jpg",
                Description=@"เป็นเครื่องดื่มที่ขึ้นชื่อของประเทศ      Laos                          ",
			},
          new Entities.beveragesSchema
            {
                Id= new Guid("a3a6cf12-baae-44d8-bf1f-333a6e705793"),
                Title=@"Malaysia     ",
                Subtitle=@" ชาชัก/tea",
                Image=@"\Images\Item-d0f4cfc0-2c3a-47cc-bae0-7fcd99e012a7.jpg",
                Description=@"เป็นเครื่องดื่มที่ขึ้นชื่อของประเทศ    Malaysia                    ",
			},
          new Entities.beveragesSchema
            {
                Id= new Guid("e1b7b166-0f8f-4a14-8a95-6a05f7c94522"),
                Title=@"Myanmar    ",
                Subtitle=@"น้ำกระเจี๊ยบ/Roselle juice",
                Image=@"\Images\Item-3eff3193-9009-4844-9baa-235337030c09.jpg",
                Description=@"เป็นเครื่องดื่มที่ขึ้นชื่อของประเทศ    Myanmar                  ",
			},
          new Entities.beveragesSchema
            {
                Id= new Guid("14fc2edd-4390-45ad-bb98-7b0cfb685851"),
                Title=@"Philippines     ",
                Subtitle=@"น้ำมะม่วงปั่น/mango juice",
                Image=@"\Images\Item-a007076c-7352-4a4e-b4ba-3a228c10a55a.jpg",
                Description=@"เป็นเครื่องดื่มที่ขึ้นชื่อของประเทศ   Philippines                 ",
			},
          new Entities.beveragesSchema
            {
                Id= new Guid("fbad1657-b8e2-4aec-9c76-f716743e102e"),
                Title=@"Thailand       ",
                Subtitle=@"น้ำมะพร้าว/ coconut juice",
                Image=@"\Images\Item-2b3def02-05f0-40f2-96c0-2713682cda96.jpg",
                Description=@"เป็นเครื่องดื่มที่ขึ้นชื่อของประเทศ Thailand                     ",
			},
          new Entities.beveragesSchema
            {
                Id= new Guid("921c33c6-1285-4279-851b-96889cb2bc8c"),
                Title=@"Vietnam  ",
                Subtitle=@"กาแฟ/coffee",
                Image=@"\Images\Item-3e2f194d-5307-436e-92ca-97983a2a81ff.jpg",
                Description=@"เป็นเครื่องดื่มที่ขึ้นชื่อของประเทศ Vietnam                      ",
			},
		};
	
		
        /// <summary>
        /// Retrieves the data from a static data source, in an observable collection of beveragesSchema items.
        /// </summary>
        /// <returns>An observable collection of beveragesSchema items.</returns>
        public ObservableCollection<Entities.beveragesSchema> GetData(int numPage)
        {								
			return new ObservableCollection<Entities.beveragesSchema>(_data.Skip(MaxResults * numPage).Take(MaxResults));
        }
		
		/// <summary>
        /// Retrieves the data from a static data source, filtered by a filter specification, in an observable collection of beveragesSchema items.
        /// </summary>
		/// <param name="filter">Filter operation specification</param>
        /// <returns>An observable collection of beveragesSchema items.</returns>
        public ObservableCollection<Entities.beveragesSchema> Search(FilterSpecification filter)
        {
            return RepositoriesBase.Filter<Entities.beveragesSchema>.FilterCollection(filter, _data);
        }
		
		/// <summary>
        /// Checks if data source has a element before the passed as parameter
        /// </summary>
		/// <param name="current">Current element</param>
        /// <returns>True, if there is a previous element, false if there is not</returns>
		public bool HasPrevious(Entities.beveragesSchema current)
        {
            if (current == null || !_data.Any()) return false;

            return _data.IndexOf(current) > 0;
        }
		
		/// <summary>
        /// Checks if data source has a element after the passed as parameter
        /// </summary>
		/// <param name="current">Current element</param>
        /// <returns>True, if there is a next element, false if there is not</returns>
		public bool HasNext(Entities.beveragesSchema current)
        {
            if (current == null || !_data.Any()) return false;

            return _data.IndexOf(current) < _data.Count - 1;
        }
		
		/// <summary>
        /// Retrieves the previous element from source.
        /// </summary>
		/// <param name="current">Current element</param>
        /// <returns>The previous element from items, if it exists. Otherwise, returns null</returns>
        public Entities.beveragesSchema Previous(Entities.beveragesSchema current)
        {
            if (current == null || !_data.Any()) return null;

            if (_data.First().Equals(current)) return null;

            return _data[_data.IndexOf(current) - 1];
        }
		
		/// <summary>
        /// Retrieves the next element from source.
        /// </summary>
		/// <param name="current">Current element</param>
        /// <returns>The next element from items, if it exists. Otherwise, returns null</returns>
        public Entities.beveragesSchema Next(Entities.beveragesSchema current)
        {
            if (current == null || !_data.Any()) return null;

            if (_data.Last().Equals(current)) return null;

            return _data[_data.IndexOf(current) + 1];
        }
	}
}

