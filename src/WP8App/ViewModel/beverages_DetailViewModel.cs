// ------------------------------------------------------------------------
// ========================================================================
// THIS CODE AND INFORMATION ARE GENERATED BY AUTOMATIC CODE GENERATOR
// ========================================================================
// Template:   ViewModel.tt
using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Windows;
using System.Windows.Input;
using Controls=WPAppStudio.Controls;
using Entities=WPAppStudio.Entities;
using EntitiesBase=WPAppStudio.Entities.Base;
using IServices=WPAppStudio.Services.Interfaces;
using IViewModels=WPAppStudio.ViewModel.Interfaces;
using Localization=WPAppStudio.Localization;
using Repositories=WPAppStudio.Repositories;
using Services=WPAppStudio.Services;
using ViewModelsBase=WPAppStudio.ViewModel.Base;
using WPAppStudio;
using WPAppStudio.Shared;

namespace WPAppStudio.ViewModel
{
    /// <summary>
    /// Implementation of beverages_Detail ViewModel.
    /// </summary>
    [CompilerGenerated]
    [GeneratedCode("Radarc", "4.0")]
    public partial class beverages_DetailViewModel : ViewModelsBase.VMBase, IViewModels.Ibeverages_DetailViewModel, ViewModelsBase.INavigable
    {       

		private readonly Repositories.beverages_beveragesCollection _beverages_beveragesCollection;
		private readonly IServices.IDialogService _dialogService;
		private readonly IServices.INavigationService _navigationService;
		private readonly IServices.ISpeechService _speechService;
		private readonly IServices.IShareService _shareService;
		private readonly IServices.ILiveTileService _liveTileService;
		
        /// <summary>
        /// Initializes a new instance of the <see cref="beverages_DetailViewModel" /> class.
        /// </summary>
        /// <param name="beverages_beveragesCollection">The Beverages_beverages Collection.</param>
        /// <param name="dialogService">The Dialog Service.</param>
        /// <param name="navigationService">The Navigation Service.</param>
        /// <param name="speechService">The Speech Service.</param>
        /// <param name="shareService">The Share Service.</param>
        /// <param name="liveTileService">The Live Tile Service.</param>
        public beverages_DetailViewModel(Repositories.beverages_beveragesCollection beverages_beveragesCollection, IServices.IDialogService dialogService, IServices.INavigationService navigationService, IServices.ISpeechService speechService, IServices.IShareService shareService, IServices.ILiveTileService liveTileService)
        {
			_beverages_beveragesCollection = beverages_beveragesCollection;
			_dialogService = dialogService;
			_navigationService = navigationService;
			_speechService = speechService;
			_shareService = shareService;
			_liveTileService = liveTileService;
        }
		
	
		private Entities.beveragesSchema _currentbeveragesSchema;

        /// <summary>
        /// CurrentbeveragesSchema property.
        /// </summary>		
        public Entities.beveragesSchema CurrentbeveragesSchema
        {
            get
            {
				return _currentbeveragesSchema;
            }
            set
            {
                SetProperty(ref _currentbeveragesSchema, value);
            }
        }
	
		private bool _hasNextpanoramabeverages_Detail0;

        /// <summary>
        /// HasNextpanoramabeverages_Detail0 property.
        /// </summary>		
        public bool HasNextpanoramabeverages_Detail0
        {
            get
            {
				return _hasNextpanoramabeverages_Detail0;
            }
            set
            {
                SetProperty(ref _hasNextpanoramabeverages_Detail0, value);
            }
        }
	
		private bool _hasPreviouspanoramabeverages_Detail0;

        /// <summary>
        /// HasPreviouspanoramabeverages_Detail0 property.
        /// </summary>		
        public bool HasPreviouspanoramabeverages_Detail0
        {
            get
            {
				return _hasPreviouspanoramabeverages_Detail0;
            }
            set
            {
                SetProperty(ref _hasPreviouspanoramabeverages_Detail0, value);
            }
        }

        /// <summary>
        /// Delegate method for the TextToSpeechbeverages_DetailStaticControlCommand command.
        /// </summary>
        public  void TextToSpeechbeverages_DetailStaticControlCommandDelegate() 
        {
				_speechService.TextToSpeech(CurrentbeveragesSchema.Subtitle + " " + CurrentbeveragesSchema.Description);
        }
		

        private ICommand _textToSpeechbeverages_DetailStaticControlCommand;

        /// <summary>
        /// Gets the TextToSpeechbeverages_DetailStaticControlCommand command.
        /// </summary>
        public ICommand TextToSpeechbeverages_DetailStaticControlCommand
        {
            get { return _textToSpeechbeverages_DetailStaticControlCommand = _textToSpeechbeverages_DetailStaticControlCommand ?? new ViewModelsBase.DelegateCommand(TextToSpeechbeverages_DetailStaticControlCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the Sharebeverages_DetailStaticControlCommand command.
        /// </summary>
        public  void Sharebeverages_DetailStaticControlCommandDelegate() 
        {
				_shareService.Share(CurrentbeveragesSchema.Subtitle, CurrentbeveragesSchema.Description, "", CurrentbeveragesSchema.Image);
        }
		

        private ICommand _sharebeverages_DetailStaticControlCommand;

        /// <summary>
        /// Gets the Sharebeverages_DetailStaticControlCommand command.
        /// </summary>
        public ICommand Sharebeverages_DetailStaticControlCommand
        {
            get { return _sharebeverages_DetailStaticControlCommand = _sharebeverages_DetailStaticControlCommand ?? new ViewModelsBase.DelegateCommand(Sharebeverages_DetailStaticControlCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the PinToStartbeverages_DetailStaticControlCommand command.
        /// </summary>
        public  void PinToStartbeverages_DetailStaticControlCommandDelegate() 
        {
				_liveTileService.PinToStart(typeof(IViewModels.Ibeverages_DetailViewModel), CreateTileInfobeverages_DetailStaticControl());
        }
		

        private ICommand _pinToStartbeverages_DetailStaticControlCommand;

        /// <summary>
        /// Gets the PinToStartbeverages_DetailStaticControlCommand command.
        /// </summary>
        public ICommand PinToStartbeverages_DetailStaticControlCommand
        {
            get { return _pinToStartbeverages_DetailStaticControlCommand = _pinToStartbeverages_DetailStaticControlCommand ?? new ViewModelsBase.DelegateCommand(PinToStartbeverages_DetailStaticControlCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the Nextpanoramabeverages_Detail0 command.
        /// </summary>
        public  void Nextpanoramabeverages_Detail0Delegate() 
        {
			var next =  _beverages_beveragesCollection.Next(CurrentbeveragesSchema);

			if(next != null)
				CurrentbeveragesSchema = next;

			RefreshHasPrevNext();
        }
		

        private ICommand _nextpanoramabeverages_Detail0;

        /// <summary>
        /// Gets the Nextpanoramabeverages_Detail0 command.
        /// </summary>
        public ICommand Nextpanoramabeverages_Detail0
        {
            get { return _nextpanoramabeverages_Detail0 = _nextpanoramabeverages_Detail0 ?? new ViewModelsBase.DelegateCommand(Nextpanoramabeverages_Detail0Delegate); }
        }

        /// <summary>
        /// Delegate method for the Previouspanoramabeverages_Detail0 command.
        /// </summary>
        public  void Previouspanoramabeverages_Detail0Delegate() 
        {
			var prev =  _beverages_beveragesCollection.Previous(CurrentbeveragesSchema);

			if(prev != null)
				CurrentbeveragesSchema = prev;

			RefreshHasPrevNext();
        }
		

        private ICommand _previouspanoramabeverages_Detail0;

        /// <summary>
        /// Gets the Previouspanoramabeverages_Detail0 command.
        /// </summary>
        public ICommand Previouspanoramabeverages_Detail0
        {
            get { return _previouspanoramabeverages_Detail0 = _previouspanoramabeverages_Detail0 ?? new ViewModelsBase.DelegateCommand(Previouspanoramabeverages_Detail0Delegate); }
        }

        private void RefreshHasPrevNext()
        {
            HasPreviouspanoramabeverages_Detail0 = _beverages_beveragesCollection.HasPrevious(CurrentbeveragesSchema);
			HasNextpanoramabeverages_Detail0 = _beverages_beveragesCollection.HasNext(CurrentbeveragesSchema);
		}
		public object NavigationContext
        {
            set
            {              
                if (!(value is Entities.beveragesSchema)) { return; }
                
                CurrentbeveragesSchema = value as Entities.beveragesSchema;
                RefreshHasPrevNext();
            }
        }
        /// <summary>
        /// Initializes a <see cref="Services.TileInfo" /> object for the beverages_DetailStaticControl control.
        /// </summary>
		/// <returns>A <see cref="Services.TileInfo" /> object.</returns>
        public Services.TileInfo CreateTileInfobeverages_DetailStaticControl()
        {
            var tileInfo = new Services.TileInfo
            {
                CurrentId = CurrentbeveragesSchema.Id.ToString(),
                Title = CurrentbeveragesSchema.Subtitle,
                BackTitle = CurrentbeveragesSchema.Subtitle,
                BackContent = CurrentbeveragesSchema.Description,
                Count = 0,
                BackgroundImagePath = CurrentbeveragesSchema.Image,
                BackBackgroundImagePath = CurrentbeveragesSchema.Image,
                LogoPath = "Logo-aa87c77c-d4e9-4a1d-82d9-d75b739152cb.png"
            };
            return tileInfo;
        }
    }
}
